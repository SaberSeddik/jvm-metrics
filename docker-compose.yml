version: "3"
services:
  application:
    build: app
    environment:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=f2b924a9-8018-40cd-936a-202991b38f94;IngestionEndpoint=https://eastus2-0.in.applicationinsights.azure.com/"
    ports:
      - "8080:8080"
      - "8010:8010"
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      - prometheus
  spring-boot-admin:
    build: spring-boot-admin
    ports:
      - "7070:7070"
    deploy:
      resources:
        limits:
          memory: 256M
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-rules.yml:/etc/prometheus/rules.yml
      - ./.prometheus-data:/prometheus
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./.grafana-data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - prometheus
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    command:
      - '-port=6060'
    ports:
      - "6060:6060"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro